name: test
description: Run tests
inputs:
  os:
    description: 'OS to run the tests on'
    required: true
    default: 'ubuntu-latest'
  coverage:
    description: 'Generate coverage report'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24.5' # Pinned version
    
    - name: Get Go cache paths
      shell: bash
      id: go-cache-paths
      run: |
        echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
        echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
    
    - name: Cache Go modules
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: |
          ${{ steps.go-cache-paths.outputs.go-mod }}
          ${{ steps.go-cache-paths.outputs.go-build }}
        key: go-cache-${{ runner.os }}-${{ hashFiles('go.mod', 'go.sum') }}-go1.24.5
        restore-keys: |
          go-cache-${{ runner.os }}-${{ hashFiles('go.mod', 'go.sum') }}-
          go-cache-${{ runner.os }}-
    
    - name: Go info
      shell: bash
      run: |
        go version
        go env
      # test

    # Install Bun
    - name: Install Bun
      shell: bash
      run: npm install -g bun

    - name: Tests
      shell: bash
      run: |
        if [ "${{ inputs.coverage }}" = "true" ]; then
          make coverage
        else
          make test
        fi
