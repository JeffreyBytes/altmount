name: Build

on:
  push:
    tags:
      - "v*.*.*"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/test
  build-cli:
    runs-on: macos-13
    needs: test
    permissions:
      contents: write
    steps:
      # dependencies
      - uses: mlugg/setup-zig@v2
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      # checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Bun for frontend build
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Cache frontend dependencies
      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: frontend-deps-${{ runner.os }}-${{ hashFiles('frontend/bun.lock') }}
          restore-keys: |
            frontend-deps-${{ runner.os }}-

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: frontend
        run: bun install --frozen-lockfile

      # Build frontend for embedding
      - name: Build frontend
        working-directory: frontend
        run: bun run build

      # build CLI
      - name: Build CLI artifacts
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --config .goreleaser-cli.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-images:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
    steps:
      # dependencies
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      # checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            network=host
            image=moby/buildkit:latest

      # docker login
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Enable buildx cache optimization
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      # build server and docker
      - name: Build Image artifacts
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --config .goreleaser-docker.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain